{% from 'components/radios/macro.njk' import govukRadios %}
{% from 'components/date-input/macro.njk' import govukDateInput %}
{% from 'components/textarea/macro.njk' import govukTextarea %}
{% from 'components/input/macro.njk' import govukInput %}
{% from 'app-components/heading.njk' import heading %}

{% extends 'layout.njk' %}

{% block page_title %}{{ super() }} - Barrier edit status{% endblock %}

{% block body_script %}
	<script>
		ma.pages.barrier.status( {
			statusTypes: {{ statusTypes | dump | safe }},
			validTypes: {{ validTypes | dump | safe }},
			pendingOther: {{ pendingOther | dump | safe }}
		} );
	</script>
{% endblock %}

{% block page_content %}

	{{ heading({
		back: { href: urls.barriers.detail( barrier.id ) },
		caption: barrier.report.barrier_title,
		text: 'Barrier Status',
		errors: errors
	}) }}

	{% set isUnknownHtml %}

		{{ govukTextarea( {

			label: {
				text: 'Provide a summary of why this barrier is unknown',
				classes: 'govuk-label--s'
			},
			id: 'unknown-summary',
			name: 'unknownSummary',
			value: unknownSummary,
			errorMessage: errors | errorForName( 'unknown-summary' )
		} ) }}
	{% endset %}

	{% set pendingOtherText %}

		{{ govukInput( {

			label: {
				text: 'Please specify',
				classes: 'govuk-label--s'
			},
			id: 'pending-type-other',
			name: 'pendingTypeOther',
			value: pendingTypeOther,
			errorMessage: errors | errorForName( 'pending-type-other' )
		} ) }}
	{% endset %}

	{% set isPendingHtml %}
		{% if validTypes.includes( statusTypes.PENDING ) %}
		{{ govukRadios( {

			idPrefix: 'pending-type',
			name: 'pendingType',
			classes: 'js-pending-type',
			fieldset: {
				legend: {
					text: 'Who is the action with?',
					classes: 'govuk-fieldset__legend--s'
				}
			},
			items: pendingType | addToRadio(
				[ pendingOther, { conditional: { html: pendingOtherText } } ]
			),
			errorMessage: errors | errorForName( 'pending-type-1' )
		} ) }}

		{{ govukTextarea( {

			label: {
				text: 'Provide a summary of why this barrier is pending action',
				classes: 'govuk-label--s'
			},
			id: 'pending-summary',
			name: 'pendingSummary',
			value: pendingSummary,
			errorMessage: errors | errorForName( 'pending-summary' )
		} ) }}
		{% endif %}
	{% endset %}

	{% set isOpenHtml %}

		{{ govukTextarea( {

			label: {
				text: 'Provide a summary of why this barrier is being reopened',
				classes: 'govuk-label--s'
			},
			id: 'reopen-summary',
			name: 'reopenSummary',
			value: reopenSummary,
			errorMessage: errors | errorForName( 'reopen-summary' )
		} ) }}
	{% endset %}

	{% set isPartResolvedHtml %}

		{{ govukDateInput( {

			id: 'part-resolved-date',
			fieldset: {
				legend: {
					text: 'Date the barrier was partially resolved',
					classes: 'govuk-fieldset__legend--s'
				}
			},
			errorMessage: errors | errorForName( 'part-resolved-date' ),
			items: [
				{
					name: 'partMonth',
					label: 'Month',
					value: partResolvedDate.partMonth,
					classes: 'govuk-input--width-2'
				},
				{
					name: 'partYear',
					label: 'Year',
					value: partResolvedDate.partYear,
					classes: 'govuk-input--width-4'
				}
			]
		} ) }}

		{{ govukTextarea( {

			label: {
				text: 'Provide a summary of how this barrier was partially resolved',
				classes: 'govuk-label--s'
			},
			id: 'part-resolved-summary',
			name: 'partResolvedSummary',
			value: partResolvedSummary,
			errorMessage: errors | errorForName( 'part-resolved-summary' )
		} ) }}
	{% endset %}

	{% set isResolvedHtml %}

		{{ govukDateInput( {

			id: 'resolved-date',
			fieldset: {
				legend: {
					text: 'Date the barrier was resolved',
					classes: 'govuk-fieldset__legend--s'
				}
			},
			errorMessage: errors | errorForName( 'resolved-date' ),
			items: [
				{
					name: 'month',
					value: resolvedDate.month,
					classes: 'govuk-input--width-2'
				},
				{
					name: 'year',
					value: resolvedDate.year,
					classes: 'govuk-input--width-4'
				}
			]
		} ) }}

		{{ govukTextarea( {

			label: {
				text: 'Provide a summary of how this barrier was resolved',
				classes: 'govuk-label--s'
			},
			id: 'resolved-summary',
			name: 'resolvedSummary',
			value: resolvedSummary,
			errorMessage: errors | errorForName( 'resolved-summary' )
		} ) }}
	{% endset %}

	{% set isHibernatedHtml %}

		{{ govukTextarea( {

			label: {
				text: 'Provide a summary of why this barrier is dormant',
				classes: 'govuk-label--s'
			},
			id: 'hibernation-summary',
			name: 'hibernationSummary',
			value: hibernationSummary,
			errorMessage: errors | errorForName( 'hibernation-summary' )
		} ) }}
	{% endset %}

	<form action="{{ urls.barriers.status( barrier.id ) }}" method="POST">
		<input type="hidden" name="_csrf" value="{{ csrfToken }}">

		{{ govukRadios( {

			idPrefix: 'status',
			name: 'status',
			classes: 'status',
			fieldset: {
				legend: {
					text: 'Change barrier status',
					classes: 'govuk-fieldset__legend--s'
				}
			},
			items: status | addToRadio(
				[ statusTypes.UNKNOWN, { conditional: { html: isUnknownHtml } } ],
				[ statusTypes.PENDING, { conditional: { html: isPendingHtml } } ],
				[ statusTypes.OPEN, { conditional: { html: isOpenHtml } } ],
				[ statusTypes.PART_RESOLVED, { conditional: { html: isPartResolvedHtml } } ],
				[ statusTypes.RESOLVED, { conditional: { html: isResolvedHtml } } ],
				[ statusTypes.HIBERNATED, { conditional: { html: isHibernatedHtml } } ]
			),
			errorMessage: errors | errorForName( 'status-1' )
		} ) }}

		<input type="submit" class="govuk-button" value="Change barrier status">
		<a href="{{ urls.barriers.detail( barrier.id ) }}" class="govuk-button button--secondary">Cancel</a>
	</form>

{% endblock -%}
